// <copyright file="Program.cs" company="Chris Crutchfield">
// Copyright (C) 2017  Chris Crutchfield
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
// </copyright>

using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Threading.Tasks;
using DotNetDocs.ContainerDocumentations;
using DotNetMDDocs.DocumentationGenerators;
using McMaster.Extensions.CommandLineUtils;
using Serilog;

namespace DotNetMDDocs
{
    internal class Program
    {
        [Required]
        [Option(Description = "Path to the Xml documentation generated by MSBuild.")]
        public string AssemblyPath { get; set; }

        [Option(Description = "Path to the documents folder.")]
        public string DocumentPath { get; set; } = "docs";

        [Option(Description = "Clear the documents folder.")]
        public bool Clean { get; set; }

        public static Task<int> Main(string[] args) =>
            CommandLineApplication.ExecuteAsync<Program>(args);

        public Task OnExecuteAsync()
        {
            Log.Logger = new LoggerConfiguration()
                .WriteTo.Console()
                .CreateLogger();

            var dllPath = this.AssemblyPath;
            var assemblyDocumentation = AssemblyDocumentation.Parse(dllPath);

            var docs = Directory.CreateDirectory(this.DocumentPath);

            if (this.Clean && docs.Exists)
            {
                docs.Delete(true);
            }

            return new AssemblyDocumentationGenerator(assemblyDocumentation, docs).GenerateAsync();
        }
    }
}
